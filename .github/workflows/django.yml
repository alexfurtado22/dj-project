name: Django CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    # This "services" block starts a Postgres database in the background
    services:
      postgres:
        image: postgres:15
        # Provide environment variables for the test database
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          # Maps the container's 5432 port to the host's 5432 port
          - 5432:5432
        # Health check to wait until Postgres is ready
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.13"] # Make sure this matches your .python-version file

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5 # Using latest action version
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies (with uv)
        run: |
          pip install uv
          uv sync

      - name: Run Tests
        # We provide all the environment variables that settings.py needs
        env:
          # This must match the "services" block above
          DATABASE_URL: postgres://test_user:test_password@localhost:5432/test_db

          # We set ENVIRONMENT=local so that ssl_require=False is set in settings.py
          ENVIRONMENT: local

          # settings.py will fail if this is not set
          SECRET_KEY: dummy-key-for-ci

        run: |
          python manage.py test
